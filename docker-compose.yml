version: "3.4"

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      - REMOTE_AUTH_SERVER_ADDR=http://172.17.0.1:8808/
      - URI_GET_BY_TOKEN=users/get-by-token
      - URI_LOGIN=authenticate
      - REFRESH_TOKEN=refresh-token
      - REMOTE_MEDIA_OBJECT_STORAGE_HOST=https://blog.wowvendor.com/

  pwa:
    build:
      context: ./pwa
      target: api_platform_pwa_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy
      NEXT_PUBLIC_ENTRYPOINT: http://caddy

  caddy:
    build:
      context: api/
      target: api_platform_caddy
    depends_on:
      - php
      - pwa
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp
        
  database:
    build:
      dockerfile: ./.docker/mysql/Dockerfile
      context: ./
    ports:
      - "33060:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=Lpt98t3333
      - MYSQL_DATABASE=blogapi
    volumes:
      - mysqldata:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --max_allowed_packet=1073741824
    security_opt:
      - seccomp:unconfined

#  database:
#    image: postgres:13-alpine
#    environment:
#      - POSTGRES_DB=api
#      - POSTGRES_PASSWORD=!ChangeMe!
#      - POSTGRES_USER=api-platform
#    volumes:
#      - db_data:/var/lib/postgresql/data:rw
#      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./api/docker/db/data:/var/lib/postgresql/data:rw

volumes:
  php_socket:
  db_data:
  caddy_data:
  caddy_config:
  mysqldata:
